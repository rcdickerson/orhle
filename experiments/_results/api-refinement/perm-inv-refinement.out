Running backward relational analysis...

*******************************************
****               ORHLE               ****
****     The Oracular RHLE Verifier    ****
*******************************************

:: Executions
  refinement (forall)
  original (exists)

:: Universal Programs
    --------
    (refinement!list_0
    ,refinement!list_1
    ,refinement!list_2) := refinement!refinedGetValues();
    refinement!sum := (refinement!list_0 + refinement!list_1) + refinement!list_2;
    refinement!refinement!retVal := refinement!sum;

:: Existential Programs
    --------
    (original!list_0
    ,original!list_1
    ,original!list_2) := original!originalGetValues();
    original!sum := (original!list_0 + original!list_1) + original!list_2;
    original!original!retVal := original!sum;

:: Precondition
(or
 (and
 (= original!list_0 refinement!list_0)
 (= original!list_1 refinement!list_1)
 (= original!list_2 refinement!list_2))
 (and
 (= original!list_0 refinement!list_0)
 (= original!list_1 refinement!list_2)
 (= original!list_2 refinement!list_1))
 (and
 (= original!list_0 refinement!list_1)
 (= original!list_1 refinement!list_0)
 (= original!list_2 refinement!list_2))
 (and
 (= original!list_0 refinement!list_1)
 (= original!list_1 refinement!list_2)
 (= original!list_2 refinement!list_0))
 (and
 (= original!list_0 refinement!list_2)
 (= original!list_1 refinement!list_0)
 (= original!list_2 refinement!list_1))
 (and
 (= original!list_0 refinement!list_2)
 (= original!list_1 refinement!list_1)
 (= original!list_2 refinement!list_0)))

:: Postcondition
(= original!sum refinement!sum)

Valid.

real	0m0.210s
user	0m0.198s
sys	0m0.013s
