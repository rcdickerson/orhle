Running backward relational analysis...

*******************************************
****               ORHLE               ****
****     The Oracular RHLE Verifier    ****
*******************************************

:: Executions
  median[1] (forall)
  median[2] (exists)

:: Universal Programs
    --------
    if median!1!a1 <= median!1!b1 then
      median!1!x1 := 1
    else
      median!1!x1 := 0
    endif;
    if median!1!x1 == 1 then
      median!1!a3 := median!1!a2
    else
      median!1!a3 := median!1!a1
    endif;
    if median!1!x1 == 1 then
      median!1!b3 := median!1!b1
    else
      median!1!b3 := median!1!b2
    endif;
    if median!1!a3 <= median!1!b3 then
      median!1!x2 := 1
    else
      median!1!x2 := 0
    endif;
    if median!1!x2 == 1 then
      median!1!m := median!1!a3
    else
      median!1!m := median!1!b3
    endif;
    median!1!ret := median!1!m;
    median!1!median!retVal := median!1!ret;

:: Existential Programs
    --------
    if median!2!a1 <= median!2!b1 then
      median!2!x1 := 1
    else
      median!2!x1 := 0
    endif;
    if median!2!x1 == 1 then
      median!2!a3 := median!2!a2
    else
      median!2!a3 := median!2!a1
    endif;
    if median!2!x1 == 1 then
      median!2!b3 := median!2!b1
    else
      median!2!b3 := median!2!b2
    endif;
    if median!2!a3 <= median!2!b3 then
      median!2!x2 := 1
    else
      median!2!x2 := 0
    endif;
    if median!2!x2 == 1 then
      median!2!m := median!2!a3
    else
      median!2!m := median!2!b3
    endif;
    median!2!ret := median!2!m;
    median!2!median!retVal := median!2!ret;

:: Precondition
(and
 (= median!1!a1 median!2!a1)
 (= median!1!a2 median!2!a2)
 (< median!1!a1 median!1!a2)
 (< median!1!b1 median!1!b2)
 (< median!2!b1 median!2!b2)
 (not (= median!1!a1 median!1!a2))
 (not (= median!1!a1 median!1!b1))
 (not (= median!1!a1 median!1!b2))
 (not (= median!1!a2 median!1!b1))
 (not (= median!1!a2 median!1!b2))
 (not (= median!1!b1 median!1!b2))
 (not (= median!2!a1 median!2!a2))
 (not (= median!2!a1 median!2!b1))
 (not (= median!2!a1 median!2!b2))
 (not (= median!2!a2 median!2!b1))
 (not (= median!2!a2 median!2!b2))
 (not (= median!2!b1 median!2!b2)))

:: Postcondition
(and
 (= median!1!ret median!2!ret)
 (= median!1!a1 median!2!a1)
 (= median!1!a2 median!2!a2))

Failure:
  Verification conditions are invalid. Model: (model (define-fun median!2!b1 () Int (- 4)) (define-fun median!2!b2 () Int 0) (define-fun median!1!b1 () Int (- 1)) (define-fun median!2!a1 () Int (- 3)) (define-fun median!1!b2 () Int 0) (define-fun median!2!a2 () Int (- 2)) (define-fun median!1!a2 () Int (- 2)) (define-fun median!1!a1 () Int (- 3)))

real	0m0.253s
user	0m0.261s
sys	0m0.061s
