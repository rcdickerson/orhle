Running backward relational analysis...

*******************************************
****               ORHLE               ****
****     The Oracular RHLE Verifier    ****
*******************************************

:: Executions
  parity[1] (forall)
  parity[2] (exists)

:: Universal Programs
    --------
    parity!1!h := parity!1!h % 2;
    if parity!1!h == 1 then
      parity!1!l := 1;
      parity!1!h := 1;
    else
      parity!1!l := 0;
      parity!1!h := 0;
    endif;
    parity!1!parity!retVal := 0;

:: Existential Programs
    --------
    parity!2!h := parity!2!h % 2;
    if parity!2!h == 1 then
      parity!2!l := 1;
      parity!2!h := 1;
    else
      parity!2!l := 0;
      parity!2!h := 0;
    endif;
    parity!2!parity!retVal := 0;

:: Precondition
(and (= parity!1!l parity!2!l) (= (mod parity!1!h 2) (mod parity!2!h 2)))

:: Postcondition
(= parity!1!l parity!2!l)

Valid.

real	0m0.213s
user	0m0.193s
sys	0m0.013s
