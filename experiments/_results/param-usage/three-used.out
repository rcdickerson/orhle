Running backward relational analysis...

*******************************************
****               ORHLE               ****
****     The Oracular RHLE Verifier    ****
*******************************************

:: Executions
  used[1A] (forall)
  used[2A] (forall)
  used[3A] (forall)
  used[1B] (exists)
  used[2B] (exists)
  used[3B] (exists)

:: Universal Programs
    --------
    used!1A!ret := (used!1A!param1 + used!1A!param2) - used!1A!param3;
    used!1A!used!retVal := used!1A!ret;
    --------
    used!2A!ret := (used!2A!param1 + used!2A!param2) - used!2A!param3;
    used!2A!used!retVal := used!2A!ret;
    --------
    used!3A!ret := (used!3A!param1 + used!3A!param2) - used!3A!param3;
    used!3A!used!retVal := used!3A!ret;

:: Existential Programs
    --------
    used!1B!ret := (used!1B!param1 + used!1B!param2) - used!1B!param3;
    used!1B!used!retVal := used!1B!ret;
    --------
    used!2B!ret := (used!2B!param1 + used!2B!param2) - used!2B!param3;
    used!2B!used!retVal := used!2B!ret;
    --------
    used!3B!ret := (used!3B!param1 + used!3B!param2) - used!3B!param3;
    used!3B!used!retVal := used!3B!ret;

:: Precondition
(and
 (not (= used!1A!param1 used!1B!param1))
 (= used!1A!param2 used!1B!param2)
 (= used!1A!param3 used!1B!param3)
 (= used!2A!param1 used!2B!param1)
 (not (= used!2A!param2 used!2B!param2))
 (= used!2A!param3 used!2B!param3)
 (= used!3A!param1 used!3B!param1)
 (= used!3A!param2 used!3B!param2)
 (not (= used!3A!param3 used!3B!param3)))

:: Postcondition
(or
 (= used!1A!ret used!1B!ret)
 (= used!2A!ret used!2B!ret)
 (= used!3A!ret used!3B!ret))

Failure:
  Verification conditions are invalid. Model: (model (define-fun used!3B!param3 () Int 1) (define-fun used!3A!param3 () Int 0) (define-fun used!2B!param2 () Int 0) (define-fun used!2A!param2 () Int 1) (define-fun used!1B!param1 () Int 0) (define-fun used!1A!param1 () Int 1) (define-fun used!3B!param2 () Int 0) (define-fun used!3A!param2 () Int 0) (define-fun used!3B!param1 () Int 0) (define-fun used!3A!param1 () Int 0) (define-fun used!2B!param3 () Int 0) (define-fun used!2A!param3 () Int 0) (define-fun used!2B!param1 () Int 0) (define-fun used!2A!param1 () Int 0) (define-fun used!1B!param3 () Int 0) (define-fun used!1A!param3 () Int 0) (define-fun used!1B!param2 () Int 0) (define-fun used!1A!param2 () Int 0))

real	0m0.207s
user	0m0.193s
sys	0m0.013s
