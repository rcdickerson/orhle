Running backward relational analysis...

*******************************************
****               ORHLE               ****
****     The Oracular RHLE Verifier    ****
*******************************************

:: Executions
  nonleak[1] (forall)
  nonleak[2] (exists)

:: Universal Programs
    --------
    nonleak!1!r := nonleak!1!randInt();
    if nonleak!1!r == 5000 then
      nonleak!1!ret := nonleak!1!high + nonleak!1!low
    else
      nonleak!1!ret := nonleak!1!low
    endif;
    nonleak!1!nonleak!retVal := nonleak!1!ret;

:: Existential Programs
    --------
    nonleak!2!r := nonleak!2!randInt();
    if nonleak!2!r == 5000 then
      nonleak!2!ret := nonleak!2!high + nonleak!2!low
    else
      nonleak!2!ret := nonleak!2!low
    endif;
    nonleak!2!nonleak!retVal := nonleak!2!ret;

:: Precondition
(= nonleak!1!low nonleak!2!low)

:: Postcondition
(and (= nonleak!1!low nonleak!2!low) (= nonleak!1!ret nonleak!2!ret))

Valid.

real	0m0.210s
user	0m0.183s
sys	0m0.022s
