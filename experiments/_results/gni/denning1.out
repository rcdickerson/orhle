Running backward relational analysis...

*******************************************
****               ORHLE               ****
****     The Oracular RHLE Verifier    ****
*******************************************

:: Executions
  denning[A] (forall)
  denning[E] (exists)

:: Universal Programs
    --------
    denning!A!i := 1;
    denning!A!n := 0;
    denning!A!sum := 0;
    while denning!A!i <= 100
      denning!A!flag := denning!A!f1_L;
      denning!A!f2_L := denning!A!flag;
      denning!A!x := denning!A!f3_H;
      if !(denning!A!flag == 0) then
        denning!A!n := denning!A!n + 1;
        denning!A!sum := denning!A!sum + denning!A!x;
      else
        skip
      endif;
      denning!A!i := denning!A!i + 1;
    end;
    denning!A!f4_H := (denning!A!n + denning!A!sum) + (denning!A!sum / denning!A!n);
    denning!A!denning!retVal := denning!A!f4_H;

:: Existential Programs
    --------
    denning!E!i := 1;
    denning!E!n := 0;
    denning!E!sum := 0;
    while denning!E!i <= 100
      denning!E!flag := denning!E!f1_L;
      denning!E!f2_L := denning!E!flag;
      denning!E!x := denning!E!f3_H;
      if !(denning!E!flag == 0) then
        denning!E!n := denning!E!n + 1;
        denning!E!sum := denning!E!sum + denning!E!x;
      else
        skip
      endif;
      denning!E!i := denning!E!i + 1;
    end;
    denning!E!f4_H := (denning!E!n + denning!E!sum) + (denning!E!sum / denning!E!n);
    denning!E!denning!retVal := denning!E!f4_H;

:: Precondition
(and (= denning!A!f1_L denning!E!f1_L) (= denning!A!f2_L denning!E!f2_L))

:: Postcondition
(and (= denning!A!f1_L denning!E!f1_L) (= denning!A!f2_L denning!E!f2_L))

Valid.

real	0m0.226s
user	0m0.170s
sys	0m0.048s
