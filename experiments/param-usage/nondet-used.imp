// A non-deterministic program that uses both of its parameters.

expected: invalid;

forall: used[1A], used[2A];
exists: used[1B], used[2B];

pre: (and
        // In 1A / 1B, fix param1
             (= used!1A!param1 used!1B!param1)
        (not (= used!1A!param2 used!1B!param2))

        // In 2A / 2B, fix param2
        (not (= used!2A!param1 used!2B!param1))
             (= used!2A!param2 used!2B!param2));

post: (or
        (= used!1A!ret used!1B!ret)
        (= used!2A!ret used!2B!ret));

aspecs:
  flip() {
    pre: true;
    post: (or (= ret! 0) (= ret! 1));
  }

especs:
  flip() {
    choiceVars: n;
    pre: (or (= n 0) (= n 1));
    post: (= ret! n);
  }

fun used(param1, param2) {
  x := param1 + param2;
  r := flip();
  if (r == 0) then
    ret := x;
  else
    ret := param1;
  endif
  return ret;
}