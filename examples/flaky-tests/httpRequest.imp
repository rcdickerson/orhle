// Example:
//
// https://github.com/CrawlScript/WebCollector
// 016b61a1f6e52cf2ffb048a2abcc01d767beb0ab
//
// Test:
// https://github.com/CrawlScript/WebCollector/blob/016b61a1f6e52cf2ffb048a2abcc01d767beb0ab/src/test/java/cn/edu/hfut/dmic/webcollector/util/OkHttpRequesterTest.java
//
// CUT:
// https://github.com/CrawlScript/WebCollector/blob/016b61a1f6e52cf2ffb048a2abcc01d767beb0ab/src/main/java/cn/edu/hfut/dmic/webcollector/plugin/net/OkHttpRequester.java
//
// Also others, eg:
// https://github.com/undertow-io/undertow/blob/d0efffad5d2034bb07525cac9b299dac72c3045d/core/src/test/java/io/undertow/server/handlers/proxy/AbstractLoadBalancingProxyTestCase.java

forall: test[1], test[2];
pre:    true;
post:   (= test!1!success test!2!success);

// alternately:
// exists: test[1], test[2];
// pre:    true;
// post:   (not (= test!1!success test!2!success));

aspecs:
  service(url) {
    pre: true;
    post: (or (= ret! 200)
              (= ret! 400)
              (= ret! 500));
  }

especs:
  service(url) {
    choiceVars: k;
    pre: (or (= k 0) (= k 1) (= k 3));
    post: (and
            (=> (= k 0) (= ret! 200))
            (=> (= k 1) (= ret! 400))
            (=> (= k 2) (= ret! 500)));
  }

fun request(url) {
  response := call service(url);
  if response == 200 then
    result := 1;
  else
    result := 0;
  endif
  return result;
}

fun test() {
  url := 1111;
  response := call request(url);
  if (response == 0) then
    success := 0;
  else
    success := 1;
  endif
  return success;
}