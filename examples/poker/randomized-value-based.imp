expected: invalid;

forall: bet[1];
exists: bet[2];

post: (= bet!1!ret bet!2!ret);

aspecs:
  random(n) {
    post: (and (>= ret! 1) (<= ret! n));
  }

especs:
  random(n) {
    templateVars: r;
    pre: (and (>= r 1) (<= r n));
    post: (= ret! r);
  }

prog bet(hand[5]):
  count_1 := 0;
  count_2 := 0;
  count_3 := 0;

  i := 0;
  while (i < 5) do
    @var {(- 5 i)}
    if (i == 0 && hand_0 == 1) then count_1 := count_1 + 1; else skip; end
    if (i == 0 && hand_0 == 2) then count_2 := count_2 + 1; else skip; end
    if (i == 0 && hand_0 == 3) then count_3 := count_3 + 1; else skip; end
    if (i == 1 && hand_0 == 1) then count_1 := count_1 + 1; else skip; end
    if (i == 1 && hand_0 == 2) then count_2 := count_2 + 1; else skip; end
    if (i == 1 && hand_0 == 3) then count_3 := count_3 + 1; else skip; end
    if (i == 2 && hand_0 == 1) then count_1 := count_1 + 1; else skip; end
    if (i == 2 && hand_0 == 2) then count_2 := count_2 + 1; else skip; end
    if (i == 2 && hand_0 == 3) then count_3 := count_3 + 1; else skip; end
    if (i == 3 && hand_0 == 1) then count_1 := count_1 + 1; else skip; end
    if (i == 3 && hand_0 == 2) then count_2 := count_2 + 1; else skip; end
    if (i == 3 && hand_0 == 3) then count_3 := count_3 + 1; else skip; end
    if (i == 4 && hand_0 == 1) then count_1 := count_1 + 1; else skip; end
    if (i == 4 && hand_0 == 2) then count_2 := count_2 + 1; else skip; end
    if (i == 4 && hand_0 == 3) then count_3 := count_3 + 1; else skip; end
    i := i + 1;
  end

  max_count := count_1;
  if (count_2 > max_count) then max_count := count_2; else skip; end
  if (count_3 > max_count) then max_count := count_3; else skip; end

  sides := 2;
  flip := call random(sides);

  if (flip == 1) then
    ret := max_count * 3;
  else
    max_bet := 10;
    ret := call random(max_bet);
  end
endp