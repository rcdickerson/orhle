// Example adapted from secure information flow lecture notes:
// https://people.cs.vt.edu/~ryder/6304/lectures/10-Denning&Denning-InfoFlow-CACM7-97-KrishnanMurali.pdf

forall: denningA1, denningA2;
exists: denningE;

pre: (and
        (= denningA1!f3_H  denningE!f3_H)
        (= denningA1!f4_H  denningE!f4_H)
        (= denningA1!f1_L  denningA2!f1_L)
        (= denningA1!f2_L  denningA2!f2_L)
        (= denningA2!f1_L  denningE!f1_L)
        (= denningA2!f2_L  denningE!f2_L));

post: (and
        (= denningA2!f1_L denningE!f1_L)
        (= denningA2!f2_L denningE!f2_L));

expected: valid;

prog denningA1(f1_L, f2_L, f3_H, f4_H):
  i   := 1;
  n   := 0;
  sum := 0;
  while (i <= 100) do
    @inv { (and (= denningA2!f1_L denningA2!f2_L)
                (= denningA2!f1_L denningA1!f1_L)
                (= denningA1!f1_L denningA2!f1_L)
                (= denningA2!f1_L denningE!f1_L)
                (=> (> denningA1!i 1)
                    (= denningA1!f1_L denningA1!f2_L))) }
    @var { (- 100 i) }
    flag := f1_L;
    f2_L := flag;
    x := f3_H;
    if (!(flag == 0)) then
      n := n + 1;
      sum := sum + x;
    else
      skip;
    end
    i := i + 1;
  end
  f4_H := n + sum + (sum / n);
endp

prog denningA2(f1_L, f2_L, f3_H, f4_H):
  i   := 1;
  n   := 0;
  sum := 0;
  while (i <= 100) do
    @inv { (and
             (= denningA1!f1_L denningE!f1_L)
             (= denningA1!f2_L denningE!f2_L)
             (= denningA1!f1_L denningA2!f1_L)
             (= denningA2!f1_L denningE!f1_L)
             (=> (> denningA2!i 1) (= denningA2!f1_L denningA2!f2_L))) }
    @var { (- 100 i) }
    flag := f1_L;
    f2_L := flag;
    x := f3_H;
    if (!(flag == 0)) then
      n := n + 1;
      sum := sum + x;
    else
      skip;
    end
    i := i + 1;
  end
  f4_H := n + sum + (sum / n);
endp

prog denningE(f1_L, f2_L, f3_H, f4_H):
  i   := 1;
  n   := 0;
  sum := 0;
  while (i <= 100) do
    @inv { (and (= denningA2!f1_L denningA2!f2_L)
                (= denningA1!f1_L denningA1!f2_L)
                (= denningA1!f1_L denningA2!f1_L)
                (= denningA2!f1_L denningE!f1_L)
                (=> (> denningE!i 1)
                    (and
                         (= denningA2!f1_L denningE!f1_L)
                         (= denningA2!f2_L denningE!f2_L)
                         (= denningE!f1_L  denningE!f2_L)))) }
    @var { (- 100 i) }
    flag := f1_L;
    f2_L := flag;
    x := f3_H;
    if (!(flag == 0)) then
      n := n + 1;
      sum := sum + x;
    else
      skip;
    end
    i := i + 1;
  end
  f4_H := n + sum + (sum / n);
endp